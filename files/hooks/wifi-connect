#!/bin/sh

# wifi-connect - Handy wrapper around wpa_supplicant/networkd
# Copyright (C) 2021 Ryan Finnie
# SPDX-License-Identifier: MPL-2.0

set -e

interface=""
while getopts ":i:" opt; do
    case "${opt}" in
        i)
            interface="$OPTARG"
            ;;
        *)
            echo "Usage: $0 [-i interface] \"access point\" \"passphrase\""
            exit 1
            ;;
      esac
done
shift $((OPTIND -1))
ap="$1"
passphrase="$2"

if [ -z "${interface}" ]; then
    interfaces=""
    multiple_interfaces="no"
    for p in /sys/class/net/*; do
        [ -e "${p}" ] || continue
        [ -e "${p}/phy80211" ] || [ -e "${p}/wireless" ] || continue
        iname="$(basename "${p}")"
        if [ -n "${interfaces}" ]; then
            multiple_interfaces="yes"
            interfaces="${interfaces} ${iname}"
        else
            interfaces="${iname}"
        fi
    done

    if [ -z "${interfaces}" ]; then
        echo "Sorry, no wireless interfaces found"
        exit 1
    elif [ "${multiple_interfaces}" = "yes" ]; then
        echo "Multiple interfaces found: ${multiple_interfaces}"
        echo "Usage: $0 -i interface \"access point\" \"passphrase\""
        exit 1
    fi
    interface="${interfaces}"
fi

if [ ! -e "/sys/class/net/${interface}" ]; then
    echo "Interface ${interface} not found"
    exit 1
fi
if [ -z "${ap}" ] || [ -z "${passphrase}" ]; then
    echo "Usage: $0 [-i interface] \"access point\" \"passphrase\""
    exit 1
fi

mkdir -p /etc/wpa_supplicant
wpa_passphrase_block="$(wpa_passphrase "${ap}" "${passphrase}")"
rm -f "/etc/wpa_supplicant/wpa_supplicant-${interface}.conf"
touch "/etc/wpa_supplicant/wpa_supplicant-${interface}.conf"
chmod 0600 "/etc/wpa_supplicant/wpa_supplicant-${interface}.conf"
cat <<EOM >"/etc/wpa_supplicant/wpa_supplicant-${interface}.conf"
ctrl_interface=/run/wpa_supplicant
update_config=1

${wpa_passphrase_block}
EOM

mkdir -p /etc/systemd/network
rm -f "/etc/systemd/network/10-${interface}.network"
cat <<EOM >"/etc/systemd/network/10-${interface}.network"
[Match]
Name=${interface}

[Network]
DHCP=yes
EOM

systemctl restart "wpa_supplicant@${interface}.service" systemd-networkd.service systemd-resolved.service
rm -f /etc/resolv.conf
ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf

echo ""
echo "Interface ${interface} is now being managed by wpa_supplicant and networkd."
echo "To see the status of these services:"
echo "    networkctl"
echo "    journalctl -a -u wpa_supplicant@${interface}.service -u systemd-networkd.service"
echo ""
