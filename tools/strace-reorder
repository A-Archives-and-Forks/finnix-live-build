#!/usr/bin/env python3

# SPDX-PackageSummary: finnix-live-build
# SPDX-FileComment: strace-reorder
# SPDX-FileCopyrightText: Copyright (C) 2011-2021 Ryan Finnie
# SPDX-License-Identifier: MPL-2.0

import pathlib
import re
import sys


class StraceReorder:
    squashfs_root = "/run/live/rootfs/filesystem.squashfs"

    r_open = re.compile(r"^[0-9]+ +(open|openat)\(.*?\) = [0-9]+<(.*?)>$")
    r_exec = re.compile(r"^[0-9]+ +(execve)\(\"(.*?)\".*?\) = [0-9]+$")

    def get_filename(self, line):
        m = re.search(self.r_open, line)
        if m:
            return m.group(2)
        m = re.search(self.r_exec, line)
        if m:
            return m.group(2)

    def main(self):
        seen = []
        for line in sys.stdin.readlines():
            filename = self.get_filename(line.rstrip())
            if not filename:
                continue

            file = pathlib.Path(filename).resolve()
            if (
                not pathlib.Path()
                .joinpath(self.squashfs_root, *file.parts[1:])
                .is_file()
            ):
                continue
            if file in seen:
                continue
            seen.append(file)

        for pos, file in enumerate(seen, 1):
            print("{}\t{}".format(str(file)[1:], 0 - pos))


if __name__ == "__main__":
    sys.exit(StraceReorder().main())
